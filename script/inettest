#!/bin/bash

#Inettest V1
FGROUND=("39" "30" "31" "32" "33" "34" "35" "36" "37" "1;30" "1;31" "1;32" "1;33" "1;34" "1;35" "1;36" "1;37")
BGROUND=(49 40 41 42 43 44 45 46 47)

CONFIG="./inettest.cfg"
NOCOLOR=0 #0 - enable colors 1 - disable colors
NOSOUNDP=0 #0 - enable sound 1 - diable sound (in process)
NOSOUNDF=0 #0 - enable sound 1 - diable sound (in final)
NOADDR=0 #0 - add address to output 1 - no add address
PACKETS=3 # ping packets
TIMEOUT=5 # get page timeout (sec.)

ISERROR=0
ERRMESS=""

echoc() #Text, color, background, attributes
{
    if [ "$NOCOLOR" -eq 1 ];then
	echo "$1" 
	return 
    fi
    if [ -z "$2" ];then
	echo "$1" 
	return 
    fi
    
    if [ -t 1 ];then
	E__="\x1b[${FGROUND[$2]}m"
	if [ -n "$3" ];then
	    E__="$E__\x1b[${BGROUND[$3]}m"
	fi
    
	if [ -n "$4" ];then
	    E__="$E__\x1b[$4""m"
	fi
    
	echo -e "$E__$1\x1b[0m"
	
    else
	echo "$1"
    fi
}

echocn() #Text, color, background, attributes
{
    if [ "$NOCOLOR" -eq 1 ];then
	echo -n "$1" 
	return 
    fi
    if [ -z "$2" ];then
	echo -n "$1" 
	return 
    fi
    
    if [ -t 1 ];then
	E__="\x1b[${FGROUND[$2]}m"
	if [ -n "$3" ];then
	    E__="$E__\x1b[${BGROUND[$3]}m"
	fi
    
	if [ -n "$4" ];then
	    E__="$E__\x1b[$4""m"
	fi
    
	echo -e -n "$E__$1\x1b[0m"
	
    else
	echo -n "$1"
    fi

}

snd_process() #$1: 0 - OK 1 - Error
{
    if [ "$NOSOUNDP" -eq 1 ];then
	return 
    fi
    
    if [ "$1" -eq 0 ]; then #OK
	n=3000
	while [ $n -gt 400 ]; do 
	    beep -f $n -l 5; n=$((n*97/100)) 
	done
    else #Error
	beep -f1000 \
	-n -f1500 \
	-n -f600 \
	-n -f500
    fi

}

snd_final() #$1: 0 - OK 1 - Error
{
    if [ "$NOSOUNDF" -eq 1 ];then
	return 
    fi
    
    if [ "$1" -eq 0 ]; then #OK
	for n in 1 2 3 ; do
	    for f in 1 2 1 2 1 2 1 2 1 2 ; do
		beep -f ${f}000 -l 20
	    done
	done
    else #Error
	for i in {21..3500..40}; do
	    beep -f $i -d 20 -l 20
	done
	for i in {3500..21..40}; do
	    beep -f $i -d 20 -l 20
	done
    fi
}

proc_getp() #$1 - page address
{
    TMPN__=`cat /dev/urandom|tr -dc 'a-zA-Z0-9'|head -c 10`
    TMPN__="$TMPN__.html"

    wget  -P "/tmp" --timeout="$TIMEOUT" --tries=1 --default-page="$TMPN__" --header="Content-type: text/html" "$1"  2>/dev/null
    ERRC=$?
    rm "/tmp/$TMPN__" >/dev/null 2>/dev/null
}

#check config file
if [ ! -f "$CONFIG" ]; then
    echoc "CRITICAL ERROR: Config file $CONFIG not exist!" 10 #2
    snd_final "1"
    exit 1
fi

CURSTRING=0
while read Y
do
    let "CURSTRING=CURSTRING+1"
    CTRF=`echo "$Y" | awk -F"|" '{print NF}'`
    
    if [ "$CTRF" -lt 2 ];then #Config syntax error
	ISERROR=1
	ERRMESS="Config syntax error in string $CURSTRING!"
	break
    fi
    
    OPER=`echo "$Y" | awk -F"|" '{print tolower($1)}'`
    ADDR=`echo "$Y" | awk -F"|" '{print $2}'`
    if [ -z "$ADDR" ];then #No address to ping or get page
	ISERROR=1
	ERRMESS="No address in string $CURSTRING!"
	break
    fi
    
    DESR=`echo "$Y" | awk -F"|" '{print $3}'`
    if [ -z "$DESR" ]; then #No desription
	DESR="No desription"
    fi
    
    CONT=`echo "$Y" | awk -F"|" '{print tolower($4)}'`
    if [ -z "$CONT" ]; then #No continue/break set, set break default
	CONT="break"
    fi
    
    if [ "$NOADDR" -eq 0 ];then
	DESR="$DESR [$ADDR]"
    fi
    
    case "$OPER" in
	ping)
	    echocn "PING $DESR..." 0
	    ping $ADDR -c $PACKETS >/dev/null 2>/dev/null
	    ERRC=$?
	    if [ "$ERRC" -eq 0 ];then
		echoc "OK" 3
		snd_process 0
	    else
		echoc "ERROR ($ERRC)" 2
		ISERROR=1
		ERRMESS="Complete with ERRORS!"
		snd_process 1
		
		if [ "$CONT" = "break" ];then
		    break
		fi
	    fi
	;;
	getp)
	    echocn "Get page $DESR..." 0
	    proc_getp "$ADDR"
	    if [ "$ERRC" -eq 0 ];then
		echoc "OK" 3
		snd_process 0
	    else
		echoc "ERROR ($ERRC)" 2
		ISERROR=1
		ERRMESS="Complete with ERRORS!"
		snd_process 1
		
		if [ "$CONT" = "break" ];then
		    break
		fi
	    fi
	;;
	*)
	    echoc "WARNING: Unknow operation $OPER (in string $CURSTRING). Skip it." 4
	    ISERROR=1
	    ERRMESS="Complete with ERRORS!"
	;;
    esac

done < <(grep -o '^[^#]*' "$CONFIG")

if [ "$ISERROR" -eq 1 ]; then
    echoc "$ERRMESS" 10 #2
    snd_final "1"
    exit 1
else
    echoc "No errors!" 11 #3
    snd_final "0"
    exit 0
fi